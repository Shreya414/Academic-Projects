import cv2
import imutils
import numpy as np
import pytesseract
#pytesseract.pytesseract.tesseract_cmd = r'C:\Program Files (x86)\Tesseract-OCR\tesseract.exe'

img = cv2.imread('/home/andy/Desktop/tesseract/audi2.jpg')
img = cv2.resize(img, (600,400) )

# Display the original image
cv2.imshow("1 - Original Image", img)
cv2.waitKey(0)

# RGB to Gray scale conversion
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
cv2.imshow("2 - Grayscale Conversion", gray)
cv2.waitKey(0)


# Noise removal with iterative bilateral filter(removes noise while preserving edges)
gray = cv2.bilateralFilter(gray, 13, 15, 15) 
cv2.imshow("3 - Bilateral Filter", gray)
cv2.waitKey(0)


# Find Edges of the grayscale image
edged = cv2.Canny(gray, 30, 200)
cv2.imshow("4 - Canny Edges", edged)
cv2.waitKey(0)


# Find contours based on Edges
contours = cv2.findContours(edged.copy(), cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)



#contours = imutils.grab_contours(contours)
#cv2.imshow("5- All Contours", contours)
#cv2.waitKey(0)

contours = sorted(contours, key = cv2.contourArea, reverse = True)[:10]
screenCnt = None


for c in contours:
    
    peri = cv2.arcLength(c, True)
    approx = cv2.approxPolyDP(c, 0.018 * peri, True)
 
    if len(approx) == 4:
        screenCnt = approx
        break
   

if screenCnt is None:
    detected = 0
    print ("No contour detected")
else:
     detected = 1

#if detected == 1:
    #cv2.drawContours(img, [screenCnt], -1, (0, 0, 255), 3)
    # Create copy of original image to draw all contours
img1 = img.copy()
cv2.drawContours(img1, cnts, -1, (0,255,0), 3)
cv2.imshow("4- All Contours", img1)
cv2.waitKey(0)

    
    
#cv2.imshow("5- All Contours", screenCnt)
#cv2.waitKey(0)

mask = np.zeros(gray.shape,np.uint8)
new_image = cv2.drawContours(mask,[screenCnt],0,255,-1,)
new_image = cv2.bitwise_and(img,img,mask=mask)
cv2.imshow("masked", new_image)
cv2.waitKey(0)

(x, y) = np.where(mask == 255)
(topx, topy) = (np.min(x), np.min(y))
(bottomx, bottomy) = (np.max(x), np.max(y))
Cropped = gray[topx:bottomx+1, topy:bottomy+1]
cv2.imshow('Cropped',Cropped)
cv2.waitKey(0)


text = pytesseract.image_to_string(Cropped, config='--psm 11')
print("programming_fever's License Plate Recognition\n")
print("Detected license plate Number is:",text)
img = cv2.resize(img,(500,300))
Cropped = cv2.resize(Cropped,(400,200))
cv2.imshow('car',img)
#cv2.imshow('Cropped',Cropped)

cv2.waitKey(0)
cv2.destroyAllWindows()
